{"version":3,"sources":["views/reports/inventory.js"],"names":["Inventory","props","toggle","$","hasClass","removeClass","addClass","state","items","vendors","message","vendor_name","selectionRange","startDate","endDate","key","inventoryData","bind","handleSelect","ranges","console","log","this","setState","selection","data","_callApi","then","response","status","invnentory","msg","value","isLoaded","className","length","map","item","i","type","total","occupied","vacant","Component","connect","loginDetails"],"mappings":"mRASMA,G,0EACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAgERC,OAAO,WAELC,IAAE,kBAAkBC,SAAS,UAC9BD,IAAE,kBAAkBE,YAAY,UAEhCF,IAAE,kBAAkBG,SAAS,WApE5B,EAAKC,MAAQ,CACfC,MAAM,GACNC,QAAQ,GACRC,QAAQ,GACRC,YAAY,MACZC,eAAgB,CACfC,UAAW,KACXC,QAAS,KACTC,IAAK,cAGR,EAAKC,cAAc,EAAKA,cAAcC,KAAnB,gBACjB,EAAKD,gBACN,EAAKE,aAAa,EAAKA,aAAaD,KAAlB,gBAfE,E,yDAiBNE,GACXC,QAAQC,IAAIF,GACfG,KAAKC,SAAS,CACbX,eACA,CACEC,UAAWM,EAAOK,UAAUX,UAC5BC,QAASK,EAAOK,UAAUV,QAC1BC,IAAK,iB,sCAWS,IAAD,OAEZU,EAAO,GACXL,QAAQC,IAAII,GACJC,YAASD,EAAM,oBAHN,GAGsC,GACtDE,MAAK,SAACC,GAEiB,KAAnBA,EAASC,OACiB,MAAzBD,EAASH,KAAKI,SAChBT,QAAQC,IAAIO,EAASH,KAAKA,MAC1B,EAAKF,SAAS,CAACf,MAAMoB,EAASH,KAAKK,cAIb,MAApBF,EAASC,QACZ,EAAKN,SAAS,CAACb,QAAQkB,EAASG,W,sCAOlBC,GACdA,GAEFV,KAAKC,SAAS,CAACZ,YAAYqB,M,+BAajB,IAAD,EAC2BV,KAAKf,MAAvBC,GADT,EACDyB,SADC,EACSzB,OADT,EACgBC,QACvB,OAEF,sBAAKyB,UAAU,iCAAf,UACA,sBAAKA,UAAU,YAAf,UACC,sBAAKA,UAAU,WAAf,UACC,oBAAIA,UAAU,UAAd,8BACCZ,KAAKf,MAAMG,QAAQyB,OAAS,GACf,sBAAMD,UAAU,QAAhB,SAAyBZ,KAAKf,MAAMG,aAGlD,qBAAKwB,UAAU,iBA8BhB,qBAAKA,UAAU,UAAf,SACA,qBAAKA,UAAU,uBAAf,SACC,wBAAOA,UAAU,oDAAjB,UACE,gCACD,+BACE,6BAAI,qBAAKA,UAAU,UAAf,SACH,6CAEA,6BAAI,qBAAKA,UAAU,UAAf,SACJ,6CAED,6BAAI,qBAAKA,UAAU,UAAf,SACH,6CAEA,6BAAI,qBAAKA,UAAU,UAAf,SACJ,mDAIF,gCACC1B,EAAM2B,OAAS,EACA3B,EAAM4B,KAAI,SAACC,EAAMC,GAAP,OAC3B,+BACE,6BAAI,4BAAID,EAAKE,SACb,6BAAI,4BAAIF,EAAKG,UACb,6BAAI,4BAAIH,EAAKI,aACb,6BAAI,4BAAIJ,EAAKK,iBAEV,mB,GAhJcC,cAkKTC,uBANf,SAAyBrC,GAEvB,OADAa,QAAQC,IAAId,EAAMsC,cACXtC,IAIMqC,CAAyB5C","file":"static/js/44.e14c0255.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport $ from 'jquery';\nimport { _callApi } from '../../Services/baseService';\nimport { DateRangePicker } from 'react-date-range';\n\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nclass Inventory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\t\titems:[],\n\t\tvendors:[],\n\t\tmessage:'',\n\t\tvendor_name:\"All\",\n\t\tselectionRange: {\n\t\t\tstartDate: null,\n\t\t\tendDate: null,\n\t\t\tkey: 'selection',\n\t\t  }\n    }\nthis.inventoryData=this.inventoryData.bind(this)\n\t\tthis.inventoryData();\n\tthis.handleSelect=this.handleSelect.bind(this)\n  }\n  handleSelect(ranges){\n    console.log(ranges);\n\tthis.setState({\n\t\tselectionRange:\n\t\t{\n\t\t  startDate: ranges.selection.startDate,\n\t\t  endDate: ranges.selection.endDate,\n\t\t  key: 'selection',\n\t\t}\n  \n\t  })\n    // {\n    //   selection: {\n    //     startDate: [native Date Object],\n    //     endDate: [native Date Object],\n    //   }\n    // }\n  }\n  inventoryData(){\n\tvar headerdata = \"\";\n\tvar data = {};\n\tconsole.log(data)\n\tvar s = _callApi(data, 'booking/inventory', headerdata,2)\n\t.then((response) => {\n\t\t\n\t\tif (response.status == 200) {\n\t\t\tif (response.data.status === 200) {\n\t\t\t  console.log(response.data.data)\n\t\t\t  this.setState({items:response.data.invnentory})\n\t\t\t}\n\t\t}else{\n\t\n\t\t\tif (response.status === 400) {\n\t\t\t\tthis.setState({message:response.msg});\n\t\t\t  }\n\t\t\t\n\t\t\t\n\t\t}\n\t})\n  }\n  onChangeOptions(value) {\n\tif(value){\n\t\t\n\t\tthis.setState({vendor_name:value});\n\n\t}\n\t\n  }\n  toggle=()=>{\n\t\n\tif($(\".custom-select\").hasClass(\"active\")){\n\t  $(\".custom-select\").removeClass(\"active\");\n\t}else{\n\t  $(\".custom-select\").addClass(\"active\");\n\t}\n  }\n  render() {\n    var { isLoaded, items ,vendors} = this.state;\n    return (\n\n\t\t<div className=\"dc-wrap inventory-report-table\">\n\t\t<div className=\"dc-header\">\n\t\t <div className=\"dch-left\">\n\t\t\t <h3 className=\"dc-head\">Inventory Report</h3>\n\t\t\t {this.state.message.length > 0 &&\n                  <span className='error'>{this.state.message}</span>}\n\t\t\t </div>\n\t\t\t\n\t\t\t <div className=\"dch-right\">\n\t\t\t \n\t\t\t\t {/* <div className=\"custom-date-picker-wrap\">\n\t\t\t\t  <h4 className=\"cs-label\">Date</h4>\n\t\t\t\t\t\n\t\t\t\t\t\t<DateRangePicker ranges={[this.state.selectionRange]}\n        onChange={this.handleSelect}/>\n\t\t\t\t\t\n\t\t\t\t </div>\n\t\t\t\t <div className=\"custom-select\">\n\t\t\t\t\t <h4 className=\"cs-label\">Select Vendor</h4>\n\t\t\t\t\t <div className=\"select-field\">\n\t\t\t\t\t\t <p className=\"select-value\">{this.state.vendor_name}</p>\n\t\t\t\t\t\t <span className=\"ion-ios-arrow-down\" onClick={this.toggle}></span>\n\t\t\t\t\t </div>\n\t\t\t\t\t <div className=\"select-field-list\">\n\t\t\t\t\t {vendors.length > 0 ?\n                    \n\t\t\t\t\t\t <ul>\n\t\t\t\t\t\t\t  <li  onClick={() => this.onChangeOptions(\"All\")}>All</li>\n\t\t\t\t\t\t\t  { vendors.map((vendor, j) => (\n\t\t\t\t\t\t\t <li  onClick={() => this.onChangeOptions(vendor.name)}>{vendor.name}</li>\n\t\t\t\t\t\t\t  ))}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t </ul>\n\t\t\t\t\t\t :''}\n\t\t\t\t\t </div>\n\t\t\t\t </div> */}\n\t\t\t </div>\t \n\t\t </div>\n\t\t <div className=\"dc-body\">\n\t\t\t<div className=\"dcb-table-responsive\">\n\t\t\t\t<table className=\"custom-table inventory-report-tbl last-center-tbl\">\n\t\t\t\t  <thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t  <th><div className=\"ct-head\">\n\t\t\t\t\t\t  <p>Vehicles</p>\n\t\t\t\t\t\t  </div></th>\n\t\t\t\t\t\t  <th><div className=\"ct-head\">\n\t\t\t\t\t\t  <p>Capacity</p>\n\t\t\t\t\t\t  </div></th>\n\t\t\t\t\t  <th><div className=\"ct-head\">\n\t\t\t\t\t\t  <p>Occupied</p>\n\t\t\t\t\t\t  </div></th>\n\t\t\t\t\t\t  <th><div className=\"ct-head\">\n\t\t\t\t\t\t  <p>Available</p>\n\t\t\t\t\t\t  </div></th>\n\t\t\t\t\t</tr>\n\t\t\t\t  </thead>\n\t\t\t\t  <tbody>\n\t\t\t\t  {items.length > 0 ?\n                      items.map((item, i) => (\n\t\t\t\t\t<tr>\n\t\t\t\t\t  <td><p>{item.type}</p></td>\n\t\t\t\t\t  <td><p>{item.total}</p></td>\n\t\t\t\t\t  <td><p>{item.occupied}</p></td>\n\t\t\t\t\t  <td><p>{item.vacant}</p></td>\n\t\t\t\t\t  </tr>\n\t\t\t\t\t  )):''}\n\t\t\t\t\t \n\t\t\t\t  </tbody>\n\t\t\t\t</table>\n\t\t\t\t  </div>\t\n\t\t </div>\t\t\n\t\t</div>\n    )\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  console.log(state.loginDetails);\n  return state;\n}\n\n\nexport default connect(mapStateToProps)(Inventory);\n\n\n"],"sourceRoot":""}