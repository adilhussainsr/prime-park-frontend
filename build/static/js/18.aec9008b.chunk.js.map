{"version":3,"sources":["views/checkout/platename.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","common/regex.js"],"names":["PlateName","props","validateForm","errors","valid","Object","values","forEach","val","length","_handleKeyDown","e","key","submit","state","vendor_id","undefined","match","params","id","customer_name","onsite_amount","mobile_number","plate_number","reservation_id","passengers","numberPassengers","confirm_plate_number","confirm_reservation_id","isDisabled","onsie_charge_applicable","bind","onChange","_callApi","then","response","status","data","users","vendor","setState","message","msg","setTimeout","event","preventDefault","this","console","log","history","push","pathname","value","regexClass","test","target","name","checkPlateNumber","children","className","to","type","placeholder","maxLength","onKeyDown","autocomplete","autoComplete","Array","map","el","index","onClick","onChangeOptions","onChangeOptionsPlus","disabled","Component","connect","loginDetails","_objectWithoutProperties","source","excluded","i","sourceKeys","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","ALPHABET_REGEX","RegExp","ALPHANUMERIC","PASSWORD_VALUE_REGEX_SPECIAL","NUMBER_ONLY","NUMBER_REGEXONLY"],"mappings":"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","file":"static/js/18.aec9008b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { _callApi } from \"../../Services/baseService\";\nimport * as regexClass from \"../../common/regex\";\n\nclass PlateName extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      vendor_id:\n        this.props.match.params.id != undefined\n          ? this.props.match.params.id\n          : 0,\n      customer_name: \"\",\n      onsite_amount: \"\",\n      mobile_number: \"\",\n      plate_number: \"\",\n      reservation_id: \"\",\n      passengers: 1,\n      numberPassengers: 5,\n      confirm_plate_number: \"\",\n      confirm_reservation_id: \"\",\n      isDisabled: true,\n      onsie_charge_applicable: false,\n      errors: {\n        customer_name: \"\",\n        onsite_amount: \"\",\n        mobile_number: \"\",\n        plate_number: \"\",\n        reservation_id: \"\",\n        passengers: \"\",\n        confirm_plate_number: \"\",\n        confirm_reservation_id: \"\",\n      },\n    };\n\n    this.submit = this.submit.bind(this);\n    this.onChange = this.onChange.bind(this);\n    if (this.state.vendor_id > 0) {\n      var headerdata = \"\";\n      var data = {};\n      var s = _callApi(\n        data,\n        \"vendor/\" + this.state.vendor_id,\n        headerdata,\n        2\n      ).then((response) => {\n        if (response.status == 200) {\n          if (response.data.status === 200) {\n            var users = response.data.vendor;\n            this.setState({\n              onsie_charge_applicable: users.onsie_charge_applicable,\n            });\n          } else {\n            this.setState({ message: response.data.msg });\n            setTimeout(() => this.setState({ message: \"\" }), 2000);\n          }\n        } else {\n          this.setState({ message: response.msg });\n          setTimeout(() => this.setState({ message: \"\" }), 2000);\n        }\n      });\n    }\n  }\n\n  componentDidMount() {}\n\n  validateForm = (errors) => {\n    let valid = true;\n    Object.values(errors).forEach(\n      // if we have an error string set valid to false\n      (val) => val.length > 0 && (valid = false)\n    );\n    return valid;\n  };\n\n  submit(event) {\n    event.preventDefault();\n\n    var data = {};\n    var errors = this.state.errors;\n    if (this.state.onsie_charge_applicable) {\n      if (this.state.onsite_amount <= 0 || this.state.onsite_amount == \"\") {\n        errors.onsite_amount = \"Please enter vaild onsite amount\";\n        this.setState({ errors });\n      }\n    }\n    if (this.state.isDisabled == false && this.validateForm(errors)) {\n      data = {\n        customer_name: this.state.customer_name,\n        onsite_amount: this.state.onsite_amount,\n        plate_number: this.state.plate_number,\n        reservation_id: this.state.reservation_id,\n        mobile_number: this.state.mobile_number,\n        passengers: this.state.passengers,\n        vendor_id: this.state.vendor_id,\n      };\n      console.log(data);\n      this.props.history.push({\n        pathname: \"/checkout/car_types\",\n        state: data, // your data array of objects\n      });\n    }\n  }\n\n  onChangeOptions(value) {\n    this.setState({ passengers: value });\n  }\n  onChangeOptionsPlus(value) {\n    this.setState({ numberPassengers: value });\n  }\n\n  checkPlateNumber(val) {\n    if (val.length === 0) {\n      return \"Plate number is required\";\n    }\n    if (!regexClass.ALPHANUMERIC.test(val)) {\n      return \"Only alphabets and number are accepted\";\n    }\n    return \"\";\n  }\n\n  onChange(event) {\n    event.preventDefault();\n    const { name, value } = event.target;\n    let errors = this.state.errors;\n\n    switch (name) {\n      case \"customer_name\":\n        errors.customer_name =\n          value.length < 2\n            ? \"Name is required\"\n            : !regexClass.ALPHABET_REGEX.test(value)\n            ? \"Only alphabets are accepted\"\n            : \"\";\n        break;\n      case \"plate_number\":\n        errors.plate_number = this.checkPlateNumber(value);\n\n        break;\n      case \"onsite_amount\":\n        errors.onsite_amount = !regexClass.NUMBER_ONLY.test(value)\n          ? \"Please enter valid site amount\"\n          : \"\";\n        break;\n      case \"reservation_id\":\n        errors.reservation_id =\n          value.length == 0\n            ? \"Reservation id is required\"\n            : !regexClass.ALPHANUMERIC.test(value)\n            ? \"Only alphabets and number are accepted\"\n            : (\n                this.state.confirm_reservation_id.length === 0\n                  ? (errors.confirm_reservation_id =\n                      \"Reservation id is required\")\n                  : \"\"\n              )\n            ? \"\"\n            : \"\";\n        break;\n\n      case \"confirm_plate_number\":\n        errors.confirm_plate_number = this.checkPlateNumber(value);\n\n        break;\n      case \"confirm_reservation_id\":\n        errors.confirm_reservation_id =\n          value.length == 0\n            ? \"Reservation id is required\"\n            : !regexClass.ALPHANUMERIC.test(value)\n            ? \"Only alphabets and number are accepted\"\n            : (\n                this.state.reservation_id.length === 0\n                  ? (errors.reservation_id = \"Reservation id is required\")\n                  : \"\"\n              )\n            ? \"\"\n            : \"\";\n        break;\n      case \"mobile_number\":\n        errors.mobile_number =\n          value.length == 0\n            ? \"Enter Phone number\"\n            : value.length < 10\n            ? \"Phone number should be 10-13 characters\"\n            : value.length > 13\n            ? \"Phone number should be less than 13 characters\"\n            : !regexClass.NUMBER_ONLY.test(value)\n            ? \"Enter vaild phone number \"\n            : \"\";\n        break;\n    }\n    this.setState({ errors, [name]: value }, () => {\n      if (name == \"confirm_plate_number\") {\n        console.log(\n          this.state.confirm_plate_number + \"!==\" + this.state.plate_number\n        );\n        if (this.state.confirm_plate_number !== this.state.plate_number) {\n          console.log(\"kkkkkkkkkkkk\");\n          errors.confirm_plate_number = \"Plate numbers do not match\";\n        } else if (this.state.confirm_plate_number == this.state.plate_number) {\n          errors.confirm_plate_number = \"\";\n        }\n      }\n      if (name == \"plate_number\") {\n        console.log(\n          this.state.confirm_plate_number + \"!==\" + this.state.plate_number\n        );\n        if (this.state.confirm_plate_number !== value) {\n          errors.confirm_plate_number = \"Plate numbers do not match\";\n        } else if (this.state.confirm_plate_number == value) {\n          errors.confirm_plate_number = \"\";\n        }\n      }\n\n      if (name == \"confirm_reservation_id\") {\n        if (this.state.confirm_reservation_id !== this.state.reservation_id) {\n          errors.confirm_reservation_id = \"Reservation ID's do not Match\";\n        } else {\n          errors.confirm_reservation_id = \"\";\n        }\n      }\n      this.setState({ errors });\n      if (\n        errors.customer_name === \"\" &&\n        this.state.customer_name != \"\" &&\n        errors.onsite_amount === \"\" &&\n        errors.mobile_number === \"\" &&\n        this.state.mobile_number != \"\" &&\n        errors.plate_number === \"\" &&\n        this.state.plate_number != \"\" &&\n        errors.reservation_id === \"\" &&\n        errors.confirm_reservation_id === \"\" &&\n        errors.confirm_plate_number === \"\"\n      ) {\n        this.setState({ isDisabled: false });\n        console.log(this.state.isDisabled);\n      }\n    });\n  }\n  _handleKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      this.submit(e);\n    }\n  };\n  render() {\n    const { errors } = this.state;\n    // eslint-disable-next-line\n    const { children, ...attributes } = this.props;\n    return (\n      <div className=\"dc-wrap plate-number\">\n        <div className=\"dc-header\">\n          <div className=\"dch-left\">\n            <h3 className=\"dc-head\">Select Plate Number</h3>\n          </div>\n          <div className=\"dch-right\">\n            {this.state.vendor_id == 0 ? (\n              <NavLink to=\"/dashboard\">\n                {\" \"}\n                <button type=\"button\" className=\"pp-custom-btn\">\n                  <span className=\"ion-arrow-left-c\"></span>Back\n                </button>\n              </NavLink>\n            ) : (\n              <NavLink to=\"/checkout/vendors\">\n                {\" \"}\n                <button type=\"button\" className=\"pp-custom-btn\">\n                  <span className=\"ion-arrow-left-c\"></span>Back\n                </button>\n              </NavLink>\n            )}\n          </div>\n        </div>\n        <div className=\"dc-body\">\n          <div className=\"sc-input-wrap\">\n            <div className=\"sc-input\">\n              <label className=\"sc-label\">Customer's Name</label>\n              <input\n                type=\"text\"\n                className=\"sc-custom-form\"\n                placeholder=\"Please enter Customer's Name\"\n                maxLength={25}\n                onKeyDown={this._handleKeyDown}\n                onChange={this.onChange}\n                name=\"customer_name\"\n                autocomplete=\"off\"\n                value={this.state.customer_name}\n              />\n              {errors.customer_name.length > 0 && (\n                <span className=\"error\">{errors.customer_name}</span>\n              )}\n            </div>\n          </div>\n\n          {this.state.onsie_charge_applicable ? (\n            <div className=\"sc-input-wrap sc-one-by-two\">\n              <div className=\"sc-input\">\n                <label className=\"sc-label\">Onsite Amount</label>\n                <input\n                  type=\"text\"\n                  className=\"sc-custom-form\"\n                  placeholder=\"Please enter onsite amount\"\n                  maxLength={25}\n                  onKeyDown={this._handleKeyDown}\n                  onChange={this.onChange}\n                  name=\"onsite_amount\"\n                  autocomplete=\"off\"\n                  value={this.state.onsite_amount}\n                />\n                {errors.onsite_amount.length > 0 && (\n                  <span className=\"error\">{errors.onsite_amount}</span>\n                )}\n              </div>\n              <div className=\"sc-input\">\n                <label className=\"sc-label\">Mobile No.</label>\n                <input\n                  type=\"text\"\n                  className=\"sc-custom-form\"\n                  placeholder=\"Please enter mobile number \"\n                  maxLength={25}\n                  onKeyDown={this._handleKeyDown}\n                  onChange={this.onChange}\n                  name=\"mobile_number\"\n                  autocomplete=\"off\"\n                  value={this.state.mobile_number}\n                />\n                {errors.mobile_number.length > 0 && (\n                  <span className=\"error\">{errors.mobile_number}</span>\n                )}\n              </div>\n            </div>\n          ) : (\n            <div className=\"sc-input-wrap\">\n              <div className=\"sc-input\">\n                <label className=\"sc-label\">Mobile No.</label>\n                <input\n                  type=\"text\"\n                  className=\"sc-custom-form\"\n                  placeholder=\"Please enter mobile number \"\n                  maxLength={25}\n                  onKeyDown={this._handleKeyDown}\n                  onChange={this.onChange}\n                  name=\"mobile_number\"\n                  autocomplete=\"off\"\n                  value={this.state.mobile_number}\n                />\n                {errors.mobile_number.length > 0 && (\n                  <span className=\"error\">{errors.mobile_number}</span>\n                )}\n              </div>\n            </div>\n          )}\n\n          <div className=\"sc-input-wrap sc-one-by-two sc-bg-gray\">\n            <div className=\"sc-input\">\n              <label className=\"sc-label\">Plate Number</label>\n              <input\n                type=\"text\"\n                className=\"sc-custom-form\"\n                placeholder=\"Please enter plate number\"\n                maxLength={25}\n                onKeyDown={this._handleKeyDown}\n                onChange={this.onChange}\n                name=\"plate_number\"\n                autocomplete=\"off\"\n                value={this.state.plate_number}\n              />\n              {errors.plate_number.length > 0 && (\n                <span className=\"error\">{errors.plate_number}</span>\n              )}\n              <input\n                type=\"text\"\n                className=\"sc-custom-form\"\n                placeholder=\"Please confirm Plate number\"\n                maxLength={25}\n                onKeyDown={this._handleKeyDown}\n                onChange={this.onChange}\n                name=\"confirm_plate_number\"\n                autocomplete=\"off\"\n                value={this.state.confirm_plate_number}\n              />\n              {errors.confirm_plate_number.length > 0 && (\n                <span className=\"error\">{errors.confirm_plate_number}</span>\n              )}\n            </div>\n            {this.state.vendor_id == 0 ? (\n              \"\"\n            ) : (\n              <div className=\"sc-input\">\n                <label className=\"sc-label\">Reservation ID</label>\n                <input\n                  type=\"text\"\n                  className=\"sc-custom-form\"\n                  placeholder=\"Please enter Reservation ID\"\n                  maxLength={25}\n                  onKeyDown={this._handleKeyDown}\n                  onChange={this.onChange}\n                  name=\"reservation_id\"\n                  autoComplete=\"off\"\n                  value={this.state.reservation_id}\n                />\n                {errors.reservation_id.length > 0 && (\n                  <span className=\"error\">{errors.reservation_id}</span>\n                )}\n                <input\n                  type=\"text\"\n                  className=\"sc-custom-form\"\n                  placeholder=\"Please confirm Reservation ID\"\n                  maxLength={25}\n                  onKeyDown={this._handleKeyDown}\n                  onChange={this.onChange}\n                  name=\"confirm_reservation_id\"\n                  autoComplete=\"off\"\n                  value={this.state.confirm_reservation_id}\n                />\n                {errors.confirm_reservation_id.length > 0 && (\n                  <span className=\"error\">{errors.confirm_reservation_id}</span>\n                )}\n              </div>\n            )}\n          </div>\n          <div className=\"select-pass\">\n            <h2 className=\"sp-heading\">Select no. of Passengers</h2>\n            <div className=\"no-pass\">\n              {[...Array(this.state.numberPassengers)].map((el, index) => (\n                <div\n                  className={\n                    this.state.passengers >= index + 1\n                      ? \"sp-no active\"\n                      : \"sp-no\"\n                  }\n                  onClick={() => this.onChangeOptions(index + 1)}\n                >\n                  {index + 1}\n                </div>\n              ))}\n              {this.state.numberPassengers < 10 ? (\n                <div\n                  className=\"sp-no sp-add-more\"\n                  onClick={() => this.onChangeOptionsPlus(10)}\n                >\n                  +\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n            <p className=\"sp-notice\">\n              Additional Charges will apply on Passengers above 4.\n            </p>\n          </div>\n        </div>\n        <div className=\"dc-footer\">\n          <button\n            type=\"button\"\n            onClick={this.submit}\n            disabled={this.state.isDisabled}\n            className=\"pp-custom-btn\"\n          >\n            Submit\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  console.log(state.loginDetails);\n  return state;\n}\n\nexport default connect(mapStateToProps)(PlateName);\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"," \nexport const ALPHABET_REGEX = RegExp(/^[a-zA-Z][a-zA-Z ]+[a-zA-Z]$/i);\nexport const EMAIL_REGEX = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\nexport const PASSWORD_REGEX = RegExp(/^[a-zA-Z0-9]*$/i);\nexport const PASSWORD_VALUE_REGEX = RegExp(/^[^\\w\\d]*(([0-9]+.*[A-Za-z]+.*)|[A-Za-z]+.*([0-9]+.*))*$/i);\nexport const ALLTYPESEGEX=RegExp(/^[^\\s].+[^\\s]$/i);\nexport const NUMBER_PHONE=RegExp(/^[+]*[(]{0,1}[0-9]{1,3}[)]{0,1}[-\\s\\./0-9]*$/g);\nexport const ALPHANUMERIC=RegExp(/^[a-zA-Z0-9\\-_]{0,40}$/i);\nexport const PASSWORD_VALUE_REGEX_SPECIAL=RegExp(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/i);\nexport const NUMBER_ONLY=RegExp(/^\\d*[0-9](|.\\d*[0-9])?$/i)\nexport const NUMBER_REGEXONLY=RegExp(/^[0-9]+(\\.([0-9]{1,50})?)?$/)\n"],"sourceRoot":""}